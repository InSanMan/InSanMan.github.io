<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小狗钱钱</title>
      <link href="/archives/ff6e34ec.html"/>
      <url>/archives/ff6e34ec.html</url>
      
        <content type="html"><![CDATA[<h1 id="财富法则"><a href="#财富法则" class="headerlink" title="财富法则"></a>财富法则</h1><p>1.一开始，我们必须明确金钱对您的意义。</p><p>2.确立最重要的目标。为什么我们必须特别强调在我们“长长的愿望目录中”的某几个目标。</p><p>3.为什么梦想储蓄罐和梦想像册很重要。我们的潜意识如何支持着我们。我们为此须满足哪些前提条件。</p><p>4.为什么仅有较高的收入绝不可能解决我们的财务难题。</p><p>5.如何使我们不放弃已经作下的决定——想象的艺术。</p><p>6.这并不总是容易的。会有一些人想要阻止我们实现自己的目标。阻力甚至经常来自我们的亲戚朋友。但还是有一些不让自己迷失的方法。</p><p>7.为什么一本“成功日记”能促使我们不断地增加收入越来越多。为什么自信是最关键的因素。</p><p>8.人们如何将自己最大的爱好作为职业，并由此再次大幅度提高自己的收入。</p><p>9.重要性和紧迫性之间的区别。人们如何不偏离制定的目标——无论在什么情况下。</p><p>10.付诸实施的关键：72小时法则。</p><p>11.我们如何挣到许多钱——以轻松的方式。</p><p>12.减少债务的四个最重要的原则。</p><p>13.一只下金蛋的鹅的故事——人们如何量入为出。</p><p>14.如何正确使用银行并使之成为一种乐趣。</p><p>15.幸福的本质以及我们如何才能获得更多的幸福。</p><p>16.爱钱可以吗?关于保险箱里的现金的诀窍。</p><p>17.金钱是“中性”的，这是什么意思。钱与幸福之间的联系。</p><p>18.归还我们的一部分所得是十分重要的。</p><p>19.对待恐惧的最佳方式。成功日记所起的作用。</p><p>20.增加金钱的最有效途径之一：投资俱乐部。保证成功的五条规定。</p><p>21.白手起家的魔法。</p><p>22.适用于所有投资的三条最重要的规定。</p><p>23.什么是股票及股票是如何真正运作的?收益是如何产生的(证券一交一 易利润及红利)?您适合股票投资吗?您将很快得出结论。</p><p>24.为什么偶尔放弃熟悉的环境，而从事我们畏惧的事情很重要。</p><p>25.如何使您每年获得12%以上的利息。近乎最佳的投资形式和最佳的投资战略。</p><p>26.为什么股票基金是保险的，而且可以为您带来好的利润。挑选保险的基金的三个依据。</p><p>27.投资基金为什么很简单。</p><p>28.在这种情况下，您的钱变作了什么—利滚利的力量。</p><p>29.波动率：如何平衡风险和赢利。</p><p>30.您如何轻松地心算利息与复利。</p><p>31.当汇率下跌时，您应当做什么?如何在这种情况下获得高额利润。</p><p>32.用基金获得可靠的高利润的前提。</p><p>33.通货膨胀的真正含义以及您如何轻松计算出它对您财产的影响。如何使通货膨胀成为您最好的朋友——当您正确选择投资对象时。</p><p>34.金钱对我们生活中的其他领域产生何种影响。当我们更多地研究金钱这个题目时，将会发生怎样的变化。</p>]]></content>
      
      
      <categories>
          
          <category> 理财 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github博客搭建教程</title>
      <link href="/archives/95771693.html"/>
      <url>/archives/95771693.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-搭建环境"><a href="#1-搭建环境" class="headerlink" title="1. 搭建环境"></a>1. 搭建环境</h2><p>首先搭建<code>nodejs</code>和<code>git</code>环境。这两个环境相当于博客搭建的基础设施，没有这两个东西的支持，就没法对自己的博客实现结构化管理。虽然这一步看起来非常枯燥无聊，却是实现后续所有功能的关键步骤！经过实验，下载这两个环境的时候，一定要关闭电脑的安全中心当中的“病毒和威胁防护”，否则直接被电脑当病毒杀灭了。</p><h3 id="1-1-到Git官网下载，下载地址，一步一步进行安装。如下图-仅展示需要提示的部分，基本上选择默认选项即可-："><a href="#1-1-到Git官网下载，下载地址，一步一步进行安装。如下图-仅展示需要提示的部分，基本上选择默认选项即可-：" class="headerlink" title="1.1 到Git官网下载，下载地址，一步一步进行安装。如下图(仅展示需要提示的部分，基本上选择默认选项即可)："></a>1.1 到Git官网下载，<a href="https://dhndzwxj.vercel.app/local_file/Git-2.33.1-64-bit.exe">下载地址</a>，一步一步进行安装。如下图(仅展示需要提示的部分，基本上选择默认选项即可)：</h3><p><img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304202255612.png" alt="image-20230420225506568"></p><h3 id="1-2安装nodejs"><a href="#1-2安装nodejs" class="headerlink" title="1.2安装nodejs"></a>1.2安装nodejs</h3><p><strong>windows：</strong>下载稳定版或者最新版都可以<a href="http://nodejs.cn/download/">Node.js</a>，安装选项全部默认，一路点击<code>Next</code>。<br>最后安装好之后，按<code>Win+R</code>打开命令提示符，输入<code>node -v</code>和<code>npm -v</code>，如果出现版本号，那么就安装成功了。</p><p>建议直接到<a href="http://nodejs.cn/">nodejs官网</a>去下载，如下所示:<img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304202256152.png" alt="在这里插入图片描述"></p><p><strong>配置一下环境变量</strong>:</p><p>在Path变量名中修改nodejs文件默认路径</p><p><img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304202258706.png" alt="image-20230420225801663"></p><h3 id="1-3-安装Hexo"><a href="#1-3-安装Hexo" class="headerlink" title="1.3.安装Hexo"></a>1.3.安装Hexo</h3><p>第一步是安装Hexo环境：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第二步是新建一个存放博客的专属文件夹，然后在这个文件夹下进行操作：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 在你的家目录下创建一个blog文件夹</span><span class="token function">mkdir</span> dlog<span class="token comment"># 进入目录</span><span class="token builtin class-name">cd</span> dlog<span class="token comment"># 初始化目录</span>hexo init<span class="token comment">#开启本地服务 </span>hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>出现以下信息，说明你可以本地访问博客系统，在浏览器输入<code>http://localhost:4000</code>这个网址，就可以看到博客首页。</p><h2 id="2-博客代码部署"><a href="#2-博客代码部署" class="headerlink" title="2.博客代码部署"></a>2.博客代码部署</h2><p>接下来就去注册一个<code>github</code>账号，用来存放我们的网站。大多数小伙伴应该都有了吧，作为一个合格的程序猿（媛）还是要有一个的。</p><p>打开<a href="https://github.com/%EF%BC%8C%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE%E4%BB%93%E5%BA%93%60New">https://github.com/，新建一个项目仓库`New</a> repository`，如下所示：</p><blockquote><p><img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304202302239.png" alt="image-20220508145224112">要创建一个和你用户名相同的仓库，后面加.[<a href="http://github.io,只有这样,将来要部署到github/">http://github.io，只有这样，将来要部署到GitHub</a> page的时候，才会被识别，也就是<a href="http://xxxx.github.io，其中xxx就是你注册GitHub的用户名。例如我的：http://gaoziman.github.io">http://xxxx.github.io，其中xxx就是你注册GitHub的用户名。例如我的：http://gaoziman.github.io</a></p></blockquote><h4 id="5-生成SSH添加到GitHub"><a href="#5-生成SSH添加到GitHub" class="headerlink" title="5. 生成SSH添加到GitHub"></a>5. 生成SSH添加到GitHub</h4><h4 id="6-将hexo部署到GitHub"><a href="#6-将hexo部署到GitHub" class="headerlink" title="6. 将hexo部署到GitHub"></a>6. 将hexo部署到GitHub</h4><p>这一步，我们就可以将<code>hexo</code>和<code>GitHub</code>关联起来，也就是将<code>hexo</code>生成的文章部署到<code>GitHub</code>上，打开博客根目录下的<code>_config.yml</code>文件，这是博客的配置文件，在这里你可以修改与博客配置相关的各种信息。</p><p>修改最后一行的配置：</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repository: https://github.com/gaoziman/gaoziman.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>安装<code>deploy-git</code> ，也就是部署的命令,这样你才能用命令部署到<code>GitHub</code>。</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">然后hexo cleanhexo generatehexo deployhexo g -f -d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="7-设置个人域名"><a href="#7-设置个人域名" class="headerlink" title="7. 设置个人域名"></a>7. 设置个人域名</h4><p>你刚买的域名，点进去添加两条解析记录，<img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304202305353.png" alt="在这里插入图片描述"></p><p>然后打开你的<code>github</code>博客项目，点击<code>settings</code>，拉到下面<code>Custom domain</code>处，填上你自己的域名，保存：<img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304202305485.png"></p><p>这时候你的项目根目录应该会出现一个名为<code>CNAME</code>的文件了。如果没有的话，打开你本地博客<code>/source</code>目录，我的是<code>D:\Study\MyBlog\source</code>，新建<code>CNAME</code>文件，注意没有后缀。然后在里面写上你的域名，保存。最后运行<code>hexo g</code>、<code>hexo d</code>上传到<code>github</code>。</p><h1 id="3-撰写博客"><a href="#3-撰写博客" class="headerlink" title="3.撰写博客"></a>3.撰写博客</h1><h4 id="3-1博客文件夹"><a href="#3-1博客文件夹" class="headerlink" title="3.1博客文件夹"></a>3.1博客文件夹</h4><p><img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304262342899.png" alt="image-20230426234240851"></p><ul><li><p><code>_config.yml</code>：俗称站点配置文件，很多与博客网站的格式、内容相关的设置都需要在里面改。</p></li><li><p><code>node_modules</code>:存储Hexo插件的文件，可以实现各种扩展功能。一般不需要管。</p></li><li><p><code>package.json</code>：别问我，我也不知道干嘛的。</p></li><li><p><code>scaffolds</code>：模板文件夹，里面的<code>post.md</code>文件可以设置每一篇博客的模板。具体用起来就知道能干嘛了。</p></li><li><p><code>source</code>：非常重要。所有的个人文件都在里面！</p></li><li><p><code>themes</code>：主题文件夹，可以从<a href="https://hexo.io/themes/">Hexo主题官网</a>或者网上大神的Github主页下载各种各样美观的主题，让自己的网站变得逼格高端的关键！</p></li></ul><h4 id="3-2新建博客文件"><a href="#3-2新建博客文件" class="headerlink" title="3.2新建博客文件"></a>3.2新建博客文件</h4><pre class="line-numbers language-none"><code class="language-none">hexo new [layout] &lt;title&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="4-主题"><a href="#4-主题" class="headerlink" title="4.主题"></a>4.主题</h1><p><img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304202307314.jpeg" alt="img"></p><h4 id="添加评论插件"><a href="#添加评论插件" class="headerlink" title="添加评论插件"></a>添加评论插件</h4><p>1 注册 LeanCloud</p><p>2 创建 Valine 应用，名称任意，例如 Valine-Admin</p><p>3 进入对应的应用，点击 设置 -&gt; 应用 Keys，获取 AppID 和 AppKey</p><p>4 在 Hexo 博客主题配置文件 next/_config.yml 中进行配置，大家也可根据自己来设置该评论设置。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 设置为true，默认为false</span>  <span class="token key atrule">appid</span><span class="token punctuation">:</span>  <span class="token comment"># 将应用key的App ID设置在这里</span>  <span class="token key atrule">appkey</span><span class="token punctuation">:</span> <span class="token comment"># 将应用key的App Key设置在这里</span>  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token comment"># 邮箱通知 , https://github.com/xCss/Valine/wiki，默认为false</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token comment"># 验证码 默认为false</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> Just go go ^_^ <span class="token comment"># 初始化评论显示，根据自己修改，这里默认，</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> monsterid <span class="token comment"># 头像风格，默认为mm，可进入网址：https://valine.js.org/visitor.html查看头像设置，这里有许多头像风格，进行设置</span>  <span class="token key atrule">guest_info</span><span class="token punctuation">:</span> nick<span class="token punctuation">,</span>mail<span class="token punctuation">,</span>link <span class="token comment"># 自定义评论标题</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span> <span class="token comment"># 分页大小，10页就自动分页</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否允许游客评论 ，进入官网查看设置：https://valine.js.org/visitor.html</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>1 查看评论</p><p>点击 存储 -&gt; 结构化数据，选择 创建 Class，名称 Comment，其他保持默认，以后就可在此 Class 内查看</p><p>注：选择 Valine 评论系统是因为支持国内网络，不需要连接外网（翻墙）就可以进行显示评论系统，而且很好管理，页面简单</p><p>2 文章阅读量统计</p><p>点击 存储 -&gt; 结构化数据，选择创建 Class，名称 Counter，其他保持默认，以后就可在此 Class 内查看</p><h1 id="5-优化Hexo"><a href="#5-优化Hexo" class="headerlink" title="5.优化Hexo"></a>5.优化Hexo</h1><h4 id="5-1百度收录你的站点"><a href="#5-1百度收录你的站点" class="headerlink" title="5.1百度收录你的站点"></a>5.1百度收录你的站点</h4><p>登录百度站长搜索资源平台：<a href="http://zhanzhang.baidu.com,/">http://zhanzhang.baidu.com，</a> 只要有百度旗下的账号就可以登录，登录成功之后在站点管理中点击添加网站然后输入你的站点地址。</p><p>注意，这里需要输入我们自己购买的域名,不能使用xxx.github.io之类域名.因为github是不允许百度的spider（蜘蛛）爬取github上的内容的，所以如果想让你的站点被百度收录，只能使用自己购买的域名</p><p>向百度站长添加网站<br>在填完网址选择完网站的类型之后需要验证网站的所有权，验证网站所有权的方式有三种：</p><ul><li>文件验证。(推荐使用)</li><li>html标签验证</li></ul><p><strong>验证网站所有权</strong></p><p>先下载 HMTL 文件，同样的，先把下载的 baidu_verify_code-a5Xk3ddsv2.html 放在 public文件中，然后在 Hexo 站点配置文件_config.yml 中配置 skip_render 信息，可以用这种方法来跳过对指定文章文件的渲染，将 source/baidu_verify_code-a5Xk3ddsv2.html 不做改动地输出到 public 目录</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">skip_render</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> baidu_verify_code<span class="token punctuation">-</span>a5Xk3ddsv2.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">hexo d 部署网站<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="向百度提交链接"><a href="#向百度提交链接" class="headerlink" title="向百度提交链接"></a>向百度提交链接</h5><h5 id="安装sitemap插件"><a href="#安装sitemap插件" class="headerlink" title="安装sitemap插件"></a>安装sitemap插件</h5><pre class="line-numbers language-none"><code class="language-none">npm install hexo-generator-sitemap --save     npm install hexo-generator-baidu-sitemap --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h5 id="修改博客配置文件"><a href="#修改博客配置文件" class="headerlink" title="修改博客配置文件"></a>修改博客配置文件</h5><pre class="line-numbers language-none"><code class="language-none"># URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'# url: https://shw2018.github.io/url: https://sunhwee.comroot: /permalink: :year/:month/:day/:title/permalink_defaults:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行完hexo g命令之后就会在网站根目录生成sitemap.xml文件和baidusitemap.xml文件，可以通过：<a href="https://sunhwee.com/baidusitemap.xml">https://sunhwee.com/baidusitemap.xml</a>, 查看该文件是否生成，其中sitemap.xml文件是搜索引擎通用的文件，baidusitemap.xml是百度专用的sitemap文件。</p><h5 id="设置主动推送"><a href="#设置主动推送" class="headerlink" title="设置主动推送"></a>设置主动推送</h5><p>安装插件<code>hexo-baidu-url-submit</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-baidu-url-submit <span class="token parameter variable">--save</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后再根目录的配置文件中新增字段</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">baidu_url_submit</span><span class="token punctuation">:</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">80</span>             <span class="token comment"># 提交最新的一个链接</span>  <span class="token key atrule">host</span><span class="token punctuation">:</span> www.sunhwee.com <span class="token comment"># 在百度站长平台中注册的域名</span>  <span class="token key atrule">token</span><span class="token punctuation">:</span> xxxxxxxxxxxxxx <span class="token comment"># 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里!</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> baidu_urls.txt  <span class="token comment"># 文本文档的地址， 新链接会保存在此文本文档里</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://typora-images-yang.oss-cn-chengdu.aliyuncs.com/img/202304262354156.png" alt="image-20230426235457936"></p><p>再加入新的<code>deploy</code>：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">deploy</span><span class="token punctuation">:</span><span class="token punctuation">-</span> <span class="token key atrule">type</span><span class="token punctuation">:</span> baidu_url_submitter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>新建博客文章名</title>
      <link href="/archives/9e43dbe9.html"/>
      <url>/archives/9e43dbe9.html</url>
      
        <content type="html"><![CDATA[<p>2023年4月20日</p><p>可以访问，主题安装成功了，每天进步一点点？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/archives/4a17b156.html"/>
      <url>/archives/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
